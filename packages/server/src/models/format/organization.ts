import { OrganizationModelLogic } from "../base/types";
import { Formatter } from "../types";

const __typename = "Organization" as const;
export const OrganizationFormat: Formatter<OrganizationModelLogic> = {
    gqlRelMap: {
        __typename,
        apis: "Api",
        comments: "Comment",
        directoryListings: "ProjectVersionDirectory",
        forks: "Organization",
        issues: "Issue",
        labels: "Label",
        meetings: "Meeting",
        members: "Member",
        notes: "Note",
        parent: "Organization",
        paymentHistory: "Payment",
        posts: "Post",
        premium: "Premium",
        projects: "Project",
        questions: "Question",
        reports: "Report",
        resourceList: "ResourceList",
        roles: "Role",
        routines: "Routine",
        smartContracts: "SmartContract",
        standards: "Standard",
        bookmarkedBy: "User",
        tags: "Tag",
        transfersIncoming: "Transfer",
        transfersOutgoing: "Transfer",
        wallets: "Wallet",
    },
    prismaRelMap: {
        __typename,
        createdBy: "User",
        directoryListings: "ProjectVersionDirectory",
        issues: "Issue",
        labels: "Label",
        notes: "Note",
        apis: "Api",
        comments: "Comment",
        forks: "Organization",
        meetings: "Meeting",
        parent: "Organization",
        posts: "Post",
        smartContracts: "SmartContract",
        tags: "Tag",
        members: "Member",
        memberInvites: "MemberInvite",
        projects: "Project",
        questions: "Question",
        reports: "Report",
        resourceList: "ResourceList",
        roles: "Role",
        routines: "Routine",
        runRoutines: "RunRoutine",
        standards: "Standard",
        bookmarkedBy: "User",
        transfersIncoming: "Transfer",
        transfersOutgoing: "Transfer",
        wallets: "Wallet",
    },
    joinMap: { bookmarkedBy: "user", tags: "tag" },
    countFields: {
        apisCount: true,
        commentsCount: true,
        issuesCount: true,
        labelsCount: true,
        meetingsCount: true,
        membersCount: true,
        notesCount: true,
        postsCount: true,
        projectsCount: true,
        questionsCount: true,
        reportsCount: true,
        rolesCount: true,
        routinesCount: true,
        smartContractsCount: true,
        standardsCount: true,
        translationsCount: true,
    },
};
