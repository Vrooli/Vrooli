import { UserModelLogic } from "../base/types";
import { Formatter } from "../types";

const __typename = "User" as const;
export const UserFormat: Formatter<UserModelLogic> = {
    gqlRelMap: {
        __typename,
        comments: "Comment",
        emails: "Email",
        focusModes: "FocusMode",
        labels: "Label",
        // phones: 'Phone',
        projects: "Project",
        pushDevices: "PushDevice",
        bookmarkedBy: "User",
        reportsCreated: "Report",
        reportsReceived: "Report",
        routines: "Routine",
    },
    prismaRelMap: {
        __typename,
        apis: "Api",
        apiKeys: "ApiKey",
        comments: "Comment",
        emails: "Email",
        organizationsCreated: "Organization",
        phones: "Phone",
        posts: "Post",
        focusModes: "FocusMode",
        invitedByUser: "User",
        invitedUsers: "User",
        issuesCreated: "Issue",
        issuesClosed: "Issue",
        labels: "Label",
        meetingsAttending: "Meeting",
        meetingsInvited: "MeetingInvite",
        pushDevices: "PushDevice",
        notifications: "Notification",
        memberships: "Member",
        projectsCreated: "Project",
        projects: "Project",
        pullRequests: "PullRequest",
        questionAnswered: "QuestionAnswer",
        questionsAsked: "Question",
        quizzesCreated: "Quiz",
        quizzesTaken: "QuizAttempt",
        reportsCreated: "Report",
        reportsReceived: "Report",
        reportResponses: "ReportResponse",
        routinesCreated: "Routine",
        routines: "Routine",
        runProjects: "RunProject",
        runRoutines: "RunRoutine",
        smartContractsCreated: "SmartContract",
        smartContracts: "SmartContract",
        standardsCreated: "Standard",
        standards: "Standard",
        bookmarkedBy: "User",
        tags: "Tag",
        transfersIncoming: "Transfer",
        transfersOutgoing: "Transfer",
        notesCreated: "Note",
        notes: "Note",
        wallets: "Wallet",
        stats: "StatsUser",
    },
    joinMap: {
        meetingsAttending: "user",
        bookmarkedBy: "user",
    },
    countFields: {
        apisCount: true,
        membershipsCount: true,
        notesCount: true,
        projectsCount: true,
        questionsAskedCount: true,
        reportsReceivedCount: true,
        routinesCount: true,
        smartContractsCount: true,
        standardsCount: true,
    },
};
