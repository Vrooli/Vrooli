// Next version of schema. Stored in separate file to avoid migrating before we're ready.
// Supports the following updates:
// 1. Order routine inputs/outputs ✅
// 2. Routine scheduling ✅
// 3. Personal time scheduling ✅
// 4. Organization time scheduling, including meetings ✅
// 5. Labels (different than tags) for personal or organization use ✅
// 6. Improved versioning of routines and standards ✅
// 7. Pull requests for updating versioned objects ✅
// 8. Push notifications with history, and notifications settings ✅
// 9. Generating API keys ✅
// 10. Account credits to limit usage. Can pay for premium, which includes
// higher limits and more features. ✅
// 11. Payment history for credits (both users and API) ✅
// 12. Node conditions ✅
// 13. Routine suggestions ✅
// 14. Reporting improvements (report status and report responses) ✅
// 15. Reputation system (your reputation is stored in awards table) ✅
// 16. Smart contracts ✅
// 17. APIs and calling them from routines ✅
// 18. Notes (organized using projects) ✅
// 19. Issues. Has comments, votes, reports, labels, and a status. Can be applied to apis, organizations, projects, routines, smart contracts, and standards ✅
// 20. Site statistics ✅
// 21. Object statistics ✅
// 22. Suggest run data public, so owners can view it (e.g. polls) ✅
// 23. Vote table's byId cascade delete, since this was preventing account deletion ✅
// 24. Referencing an object in a comment, note, or issue. Could maybe get away with using resource list ⚠️
// 25. Feeds for users and organizations. Each post contains an optional title and description, with one or more
// resources. If resource is a Vrooli object, uses the object's title and description. Routine resourcess can act as a questionnaire, call to action, etc. Feeds
// without a resource can act as an AMA, discussion, random thought, etc. Feeds can be public or private (always private for users), and receive 
// comments, votes, views, reports, and reposts. Up to posts can be pinned to the top of a feed. While maybe not necessary, should be set up 
// so users and organizations can have multiple feeds ✅
// 26. A question object. Can be attached to routines, projects, standards, smart contracts, apis, organizations, or be standalone (standalone ones show up in site search). Can be marked as answered,
// and can be viewed, voted, starred, reported, tagged, isPrivate. Also has isSpecificToObject field to specify if question should 
// come up when one searches for existing questions to attach to an object ✅
// 28. Quiz object. Stores status, questions with weights, scoreToPass. Can be personal (created by you or auto-generated to 
// test your understanding of previously-run learning routines), or attached to a post or routine. These quizzes have their own question/answer tables
// different than the "question object" in the item above - so be careful when implementing ✅
// 29. Quiz results object. Stores score, correct/incorrect answers, and time taken ✅
// 29. Awards. Stores progress instead of isComplete. For rewards with only one tier, progress is 0 or 1. For rewards with multiple tiers,
// progress is the number of times you've completed that action. The closest lower tier is the one you're currently on. ✅
// 30. Streaks ✅
// 31. Project maps ✅
// 32. Improved role permissions ✅
// 33. Multi-role routines ✅
// 34. Fundraising/funding ⚠️
// 35. Personal reminders, overall and by schedule ✅
// 36. Add invitedBy relation to users ✅
// 37. Transfer object request ✅
// 38. Update resource lists so only one per object. Also add them to user schedules. This will allow the Home page to be more dynamic ✅
// 39. Node voting/waiting. Multi-role routines should allow members of certain roles to vote if a node is passed or failed. This will allow
// for things like creating work proposals, where members can determine if the proposal is worth pursuing ✅
// 40. Notifications for specific objects ⚠️